
/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.kotlin             = "1.3.21"
versions.coroutines         = "1.1.1"
versions.kotlin_core        = "1.0.0"
versions.constraint_layout  = "2.0.0-alpha2"
versions.rest_client        = "1.1.1"
versions.espresso           = "3.1.0"

versions.atsl_version       = "1.1.0"

versions.truth              = "0.42"

versions.atsl_runner_ext    = "1.1.0"

versions.android_gradle_plugin = "3.2.0"
versions.gson               = "2.8.5"
versions.glide              = "4.9.0"
versions.paging             = "2.1.0"
versions.retrofit           = "2.4.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.arch_core          = "2.0.0"
versions.room               = "2.0.0"
versions.lifecycle          = "2.0.0"
versions.support            = "1.0.0"
versions.dagger             = "2.16"
versions.junit              = "4.12"
versions.roboletric         = "4.2"
versions.mockwebserver      = "3.8.1"
versions.mockito            = "2.7.19"
versions.mockito_all        = "1.10.19"
versions.mockito_android    = "2.22.0"
versions.coreVersion        = "1.1.1-alpha02"
versions.extJUnitVersion    = "1.1.1-alpha02"

def deps = [:]

def kotlin = [:]
kotlin.stdlib       = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test         = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin       = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen      = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.coroutines   = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
kotlin.coroutines_ui= "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
kotlin.core         = "androidx.core:core-ktx:$versions.kotlin_core"
deps.kotlin = kotlin

def support = [:]
support.annotations  = "androidx.annotation:annotation:$versions.support"
support.app_compat   = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview     = "androidx.cardview:cardview:$versions.support"
support.design       = "com.google.android.material:material:$versions.support"
support.v4           = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils   = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support

def lifecycle = [:]
lifecycle.runtime       = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions    = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler      = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle          = lifecycle

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide


//other library
deps.constraint_layout  = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.junit              = "junit:junit:$versions.junit"
deps.gson               = "com.google.code.gson:gson:$versions.gson"
deps.roboletric         = "org.robolectric:robolectric:$versions.roboletric"
deps.paging_ktx         = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.mock_web_server    = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
ext.deps = deps

def room = [:]
room.runtime            = "androidx.room:room-runtime:$versions.room"
room.compiler           = "androidx.room:room-compiler:$versions.room"
room.testing            = "androidx.room:room-testing:$versions.room"
deps.room = room

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson    = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxJava  = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock    = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit    = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime      = "com.google.dagger:dagger:$versions.dagger"
dagger.android      = "com.google.dagger:dagger-android:$versions.dagger"
dagger.compiler     = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support          = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger         = dagger

def espresso = [:]
espresso.core    = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
deps.espresso    = espresso

def mockito = [:]
mockito.core     = "org.mockito:mockito-core:$versions.mockito"
mockito.all      = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android  = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito     = mockito

def atsl = [:]

atsl.core       = "androidx.test:core:$versions.atsl_version"
atsl.rules      = "androidx.test:rules:$versions.atsl_version"
atsl.runner     = "androidx.test:runner:$versions.atsl_version"
atsl.ext_junit  = "androidx.test.ext:junit:$versions.atsl_version"
atsl.ext_truth  = "androidx.test.ext:truth:$versions.atsl_version"

atsl.truth      = "com.google.truth:truth:0.42"
atsl.core_test  = "androidx.arch.core:core-testing:2.0.0"
atsl.runner_ext = "androidx.test.ext:junit:$versions.atsl_runner_ext"
deps.atsl = atsl

def build_versions = [:]
build_versions.min_sdk = 17
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.version_code = 1
build_versions.version_name = "0.0.1"
ext.build_versions = build_versions

ext.deps = deps
def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url 'https://jitpack.io' }
}
ext.addRepos = this.&addRepos